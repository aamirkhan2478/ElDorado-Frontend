// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Car detail page Should render the proper details page for a car 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="flex items-center justify-center mx-auto h-96 my-auto"
      >
        <div
          aria-busy="true"
          aria-label="rings-loading"
          class=""
          data-testid="rings-loading"
          role="status"
          style="display: flex;"
        >
          <svg
            data-testid="rings-svg"
            height="80"
            stroke="#ffa200"
            viewBox="0 0 45 45"
            width="80"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g
              fill="none"
              fill-rule="evenodd"
              stroke-width="2"
              transform="translate(1 1)"
            >
              <circle
                cx="22"
                cy="22"
                r="6"
                stroke-opacity="0"
              >
                <animate
                  attributeName="r"
                  begin="1.5s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="6;22"
                />
                <animate
                  attributeName="stroke-opacity"
                  begin="1.5s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="1;0"
                />
                <animate
                  attributeName="stroke-width"
                  begin="1.5s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="2;0"
                />
              </circle>
              <circle
                cx="22"
                cy="22"
                r="6"
                stroke-opacity="0"
              >
                <animate
                  attributeName="r"
                  begin="3s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="6;22"
                />
                <animate
                  attributeName="strokeOpacity"
                  begin="3s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="1;0"
                />
                <animate
                  attributeName="strokeWidth"
                  begin="3s"
                  calcMode="linear"
                  dur="3s"
                  repeatCount="indefinite"
                  values="2;0"
                />
              </circle>
              <circle
                cx="22"
                cy="22"
                r="8"
              >
                <animate
                  attributeName="r"
                  begin="0s"
                  calcMode="linear"
                  dur="1.5s"
                  repeatCount="indefinite"
                  values="6;1;2;3;4;5;6"
                />
              </circle>
            </g>
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="flex items-center justify-center mx-auto h-96 my-auto"
    >
      <div
        aria-busy="true"
        aria-label="rings-loading"
        class=""
        data-testid="rings-loading"
        role="status"
        style="display: flex;"
      >
        <svg
          data-testid="rings-svg"
          height="80"
          stroke="#ffa200"
          viewBox="0 0 45 45"
          width="80"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fill-rule="evenodd"
            stroke-width="2"
            transform="translate(1 1)"
          >
            <circle
              cx="22"
              cy="22"
              r="6"
              stroke-opacity="0"
            >
              <animate
                attributeName="r"
                begin="1.5s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="6;22"
              />
              <animate
                attributeName="stroke-opacity"
                begin="1.5s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="1;0"
              />
              <animate
                attributeName="stroke-width"
                begin="1.5s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="2;0"
              />
            </circle>
            <circle
              cx="22"
              cy="22"
              r="6"
              stroke-opacity="0"
            >
              <animate
                attributeName="r"
                begin="3s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="6;22"
              />
              <animate
                attributeName="strokeOpacity"
                begin="3s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="1;0"
              />
              <animate
                attributeName="strokeWidth"
                begin="3s"
                calcMode="linear"
                dur="3s"
                repeatCount="indefinite"
                values="2;0"
              />
            </circle>
            <circle
              cx="22"
              cy="22"
              r="8"
            >
              <animate
                attributeName="r"
                begin="0s"
                calcMode="linear"
                dur="1.5s"
                repeatCount="indefinite"
                values="6;1;2;3;4;5;6"
              />
            </circle>
          </g>
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
